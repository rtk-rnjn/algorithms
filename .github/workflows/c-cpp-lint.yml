name: C/C++ Syntax Checker

on:
  push:
    branches: [ main ]
    paths:
      - '**/*.c'
      - '**/*.cpp'

  pull_request:
    branches: [ main ]
    paths:
      - '**/*.c'
      - '**/*.cpp'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@main

      - name: Install build essentials (if needed)
        run: |
          sudo apt update
          sudo apt install -y build-essential

      - name: Run syntax check for C codes
        run: |
            for file in $(find . -name "*.c"); do
                echo "Checking $file"
                exitcode=0
                gcc -fsyntax-only "$file" || exitcode=$?
                if [ $exitcode -ne 0 ]; then
                    echo "Syntax check failed for $file"
                    return 1
                fi
            done

      - name: Run syntax check for C++ codes
        run: |
            for file in $(find . -name "*.cpp"); do
                echo "Checking $file"
                exitcode=0
                g++ -fsyntax-only $file || exitcode=$?
                if [ $exitcode -ne 0 ]; then
                    echo "Syntax check failed for $file"
                    exit 1
                fi
            done

      - name: Install clang-tidy and other tools
        run: |
          sudo apt update
          sudo apt install -y clang-tidy clang-format clang-tools clang clangd cmake
      
      - name: Check clang-tidy, clang-format
        run: |
            clang-tidy --version && clang-format --version
      
      - name: Run clang-tidy for C/CPP codes
        run: |
            global_exitcode=0
            for file in $(find . -name "*.c" -o -name "*.cpp"); do
                echo "Running clang-tidy for $file"
                exitcode=0
                clang-tidy $file -config-file='./.clang-tidy' --quiet & > /dev/null 2>&1 || exitcode=$?
                if [ $exitcode -ne 0 ]; then
                    echo "clang-tidy failed for $file"
                    clang-tidy $file -config-file='./.clang-tidy'
                    if [ $global_exitcode -eq 0 ]; then
                        global_exitcode=1
                    fi
                fi
            done
            exit $global_exitcode

